Here’s the “no-frills” version—everything you need for a bare-bones **Price-in-Sats** Chrome extension whose only job is to swap fiat numbers for satoshi amounts and drop a funnel link to Opportunity Cost.

---

## 1.  One-sentence product spec  
> “Replace every fiat price you see on the web with its satoshi equivalent—then invite the user to track their stack in Opportunity Cost.”

---

## 2.  Minimal feature set  

| Piece | What it does | Why we keep it |
|-------|--------------|----------------|
| **Content script** | Scans the DOM for currency patterns (`$ 12.34`, `€ 49,00`, `£199`), converts, and rewrites the text node in-place. | Core value; no options. |
| **Realtime BTC price fetch** | Pulls BTC-USD (or the user’s detected currency) once per page load from an unauthenticated endpoint (e.g., `https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd`). | Good enough; one request per page keeps it simple. |
| **Toolbar icon with single link** | Clicking the icon opens `https://opportunitycost.app?utm_source=chrome_ext` | Only funnel we need. |
| **Hard-coded currency list** | Start with USD; fall back to USD if regex hits another symbol. | Avoid settings UI. |
| **Graceful fallback** | If API fails, leave prices untouched. | Prevents broken pages. |

_No options page, no telemetry, no caching layers, no dark/light themes._

---

## 3.  Skeleton implementation (≈150 lines of code)

<details><summary>manifest.json (Manifest V3)</summary>

```json
{
  "name": "Price-in-Sats",
  "description": "See every price in satoshis.",
  "version": "0.0.1",
  "manifest_version": 3,
  "permissions": ["activeTab", "scripting"],
  "host_permissions": ["https://api.coingecko.com/*"],
  "action": {
    "default_title": "Opportunity Cost",
    "default_icon": {
      "16": "icon16.png",
      "48": "icon48.png",
      "128": "icon128.png"
    }
  },
  "background": {
    "service_worker": "background.js"
  },
  "content_scripts": [
    {
      "matches": ["<all_urls>"],
      "js": ["content.js"],
      "run_at": "document_idle"
    }
  ]
}
```
</details>

<details><summary>content.js (core logic)</summary>

```js
(async () => {
  const SATS_IN_BTC = 100_000_000;
  const api = "https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd";
  const { bitcoin: { usd: btcUsd } } = await (await fetch(api)).json();
  if (!btcUsd) return;

  const usdRegex = /\$[\s\u00A0]?(\d{1,3}(?:[,]\d{3})*(?:\.\d{2})?)/g;

  const walk = (node) => {
    if (node.nodeType === 3) replace(node);
    else if (node.nodeType === 1 && !/SCRIPT|STYLE/.test(node.tagName))
      node.childNodes.forEach(walk);
  };

  const replace = (textNode) => {
    textNode.textContent = textNode.textContent.replace(usdRegex, (_, num) => {
      const fiat = parseFloat(num.replace(/,/g, ""));
      const sats = Math.round((fiat / btcUsd) * SATS_IN_BTC).toLocaleString();
      return `${sats} sats`;
    });
  };

  walk(document.body);
})();
```
</details>

<details><summary>background.js</summary>

```js
chrome.action.onClicked.addListener(() => {
  chrome.tabs.create({ url: "https://opportunitycost.app?utm_source=chrome_ext" });
});
```
</details>

---

## 4.  Build & ship checklist (3–4 days)

1. **Day 0.5** – Create repo, icons, and the three files above.  
2. **Day 1** – Manual QA on top 10 sites (Amazon, NYTimes, YouTube). Patch edge-cases (prices in headings, dynamic content).  
3. **Day 2** – Zip & submit to Chrome Web Store (use “Unlisted” until approved).  
4. **Day 3–4** – Publish a tweet thread + short demo GIF, email existing list: “See every price in sats—remind yourself of your Opportunity Cost.”  

_Optional_: fork to Firefox (WebExtensions API is identical), Edge add-on store.

---

## 5.  Future nice-to-haves (only if the extension gains traction)

* Dual-display mode `(123 sats | $3.45)`  
* Multi-currency regexes (€ £ ¥).  
* Timer-based BTC price refresh for long-scroll pages.  
* Lightweight options page to toggle modes.  

---

### Bottom line  
You can get a functional, branded **Price-in-Sats** extension live in under a week with ≈150 LoC. It keeps your engineering cost trivial while planting a constant “stack sats” reminder—and every click on the toolbar logo delivers prospects straight into the Opportunity Cost product funnel.